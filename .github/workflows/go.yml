# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21.5'

    - name: Build
      run: |
        GOOS=windows GOARCH=amd64 go build felix_lan_tool.go
        ls

    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +''%Y-%m-%d-%H-%M'')"
        
    - name: Create release.
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ steps.date.outputs.date }}
        release_name: ${{ steps.date.outputs.date }}
        body: |
            Download felix_lan_tool.exe here
        draft: false
        prerelease: false

    - name: Upload sources zip.
      id: upload-sources-zip
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: felix_lan_tool.exe
        asset_name: felix_lan_tool.exe
        asset_content_type: application/vnd.microsoft.portable-executable
